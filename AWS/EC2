** EC2-Instance 
-- Amazon Web Services EC2 (Elastic Cloud Compute) is a web service that offers resizable compute capacity in the Amazon Web Services cloud. 
-- It provides Infrastructure as a Service (IaaS) to its consumers (IaaS). 
-- It gives you full control over your computing resources, which you can scale as needed.
-- EC2 instance is simply a virtual server in Amazon Web Services terminology..
-- Amazon EC2 provides scalable computing capacity in the AWS Cloud. 
-- It allows you to launch virtual servers, known as instances, on-demand. 
-- This helps reduce hardware costs and speeds up application development and deployment..

** How to create 
-- In memory configuration we can set as different combination of CPU , RAM (MEMORY) ..
-- we need to select Instance Type for creation time (t2.Small, t2.nano, t2.large)
-- need to set network configuration , if previously created , then also we can use and create easily ... 
-- (mostly select TYPE --All trafic ,  port range -- All , protocol - All)
   ( TYPE- NFS , Protocol - TCP , Port range -- 2049   == For ECS task triggered if needed )


** How EC2 Works 
-- EC2 handles scaling according to changing needs using the AWS Management Console, 
AWS Command Line Interface (CLI), or AWS Software Development Kits (SDKs), 
and makes it easy to deploy virtual servers and maintain storage.

** How instances are categorized in AWS EC2?
Instances are classified into three categorize.

1] On-Demand Instances:--
-- In case of On-Demand, there are no long-term contracts. 
-- They bill you per hour for the compute capacity you use. 
-- Companies may scale up or down the capacity of their application based on demand, and they only pay for the hourly rate of the instance they select.

2] Reserved Instances (RI):--
-- These instances offer a significant discount (up to 75%) compared to On-Demand pricing when you commit to using them for a 1 or 3-year term.
-- Best for steady-state or predictable usage applications, such as databases.

3] Spot instances:--
-- These instances allow you to bid on unused EC2 capacity at a lower price, which can result in significant cost savings.
-- Suitable for flexible workloads, such as batch processing, data analysis, and workloads that can be interrupted.

**************** CMD *****************

1]   whoami   == to check current user name 
2]   aws ec2 describe-security-groups		== describe security group 
3]   aws ec2 describe-vpcs		== describe VPC groups 
4]   aws ec2 describe-security-groups		== describe security group 
4]   df -h 		== to check available space 


*************** How to connect with S3 ? **********************
-- need to create one role in I am console .. give that role all permission like AmazonS3FullAccess
-- in ec2 need to modify Iam Role 
-- OR --
Using AWS CONFIGURE 
in that need to pass following credentials 
1] AWS Pass key
2] AWS Secrete Key 
3] AWS region 
4] auto like file mode .... no need to set as DEFAULT 

aws s3 ls 
-- to displays all buckets from s3 

aws s3 ls s3://docker-im
-- display all inside the Buckets 

** How to copy From S3 to EC2 
aws s3 cp s3://docker-im/final-image.tar /home/ec2-user/               
aws s3 cp s3://docker-im/NETWORK/ /home/ec2-user/NETWORK/ --recursive

** How to copy From EC2 to S3 
aws s3 cp /home/ec2-user/INPUT s3://docker-im/psalogv2/INPUT/ --recursive



*******************  How to connect EFS *******************

To Access ec2 instance to EFS -- Elastic File System 
check first security groups in EC2-instance that have appropriate access --

Inbound role 
(for TCP - 2049 bound , TYPE -- NFS , Protocal -- TCP , Port range -- 2049 ,source -- sg-057710b5b318ef297    (security group)  )

Outbound role -- all traffic allows  

** installing the nc (netcat) utility and checking network connectivity to a specific port
-- sudo yum install nc -y   
-- nc -zv [ip-address] 2049
-- sudo mkdir -p /mnt/efs           ** creating mount path 

-- sudo mount -t nfs -o nfsvers=4.1 [efs DNS NAME]:/ /mnt/efs
-- sudo mount -t nfs -o nfsvers=4.1 fs-0c2c44cc1d94accea.efs.ap-south-1.amazonaws.com:/ /mnt/efs
     ( fs-0c2c44cc1d94accea.efs.ap-south-1.amazonaws.com   --   file system DNS)
	 
**  change the ownership of the /mnt/efs directory to the ec2-user user and group
** chown using for change ownership 
-- sudo chown ec2-user:ec2-user /mnt/efs
-- sudo chmod 755 /mnt/efs
-- ls /mnt/efs


**** How to take snapshot for any instance ***

Go to the EC2 console.
Select Instances and choose the instance you want to back up.
Under the Description tab, note the Volume ID of the EBS volumes attached to the instance.
Create a Snapshot:

Go to the Elastic Block Store > Volumes in the EC2 console.
Select the volume you want to back up.
Click Actions > Create Snapshot.
Provide a description for the snapshot and click Create Snapshot.
Using AWS CLI to Create a Snapshot:
You can also create a snapshot using the AWS CLI:

-- aws ec2 create-snapshot --volume-id vol-1234567890abcdef0 --description "My snapshot description"



